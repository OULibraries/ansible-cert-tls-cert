---

- name: ACME account key exists
  command: >
    openssl genrsa -out "{{ tls_cert_path }}"/acme_account_privkey.pem
  args:
    creates: "{{ tls_cert_path }}/acme_account_privkey.*"

- name: Unencrypted ACME account key exists.
  command: >
    ansible-vault decrypt
    {{ tls_cert_path }}/acme_account_privkey.vault.yml
    --output={{ tls_cert_path }}/acme_account_privkey.pem
  args:
    chdir: "{{ tls_cert_path}}/.."
    creates: "{{ tls_cert_path }}/acme_account_privkey.pem"

- name: Local ACME challenge directory exists
  file:
    path: "{{ tls_cert_path }}/{{ item.common_name }}/acme/.well-known/acme-challenge"
    state: directory
    recurse: yes
  with_items: "{{ tls_certificates }}"
  when: item.type == "acme"

- name: Request challenge
  letsencrypt:
    remaining_days: "{{ tls_cert_acme_remaining_days }}"
    acme_directory: "{{ item.acme_dir | default(tls_cert_acme_directory) }}"
    account_email: "{{ tls_cert_acme_account_email }}"
    account_key: "{{ tls_cert_path }}/acme_account_privkey.pem"
    csr: "{{ tls_cert_path }}/{{ item.common_name }}/request.csr"
    dest: "{{ tls_cert_path }}/{{ item.common_name }}/fullchain.pem"
  register: tls_cert_acme_challenge
  with_items: "{{ tls_certificates }}"
  when: item.type == "acme"

- include: acme-challenge.yml
  with_items:
    - "{{ tls_cert_acme_challenge.results }}"
  when: acme_challenge.item.type == "acme" and acme_challenge|changed
  loop_control:
    loop_var:  acme_challenge
  tags:
  - tls_cert_acme

- name: Encrypted ACME account key exists.
  command: >
    ansible-vault encrypt
    {{ tls_cert_path }}/acme_account_privkey.pem
    --output={{ tls_cert_path }}/acme_account_privkey.vault.yml
  args:
    chdir: "{{ tls_cert_path}}/.."
    creates: "{{ tls_cert_path }}/acme_account_privkey.vault.yml"

- name: Unencrypted ACME account key is absent.
  file:
    path: "{{ tls_cert_path }}/acme_account_privkey.pem"
    state: absent
