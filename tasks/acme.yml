---

- name: ACME account key exists
  command: >
    openssl genrsa -out "{{ tls_cert_path }}"/acme_account_privkey.pem
  args:
    creates: "{{ tls_cert_path }}/acme_account_privkey.pem"

- name: Local ACME challenge directory exists
  file:
    path: "{{ tls_cert_path }}/{{ item.common_name }}/acme/.well-known/acme-challenge"
    state: directory
    recurse: yes
  with_items: "{{ tls_certificates }}"
  when: item.type == "acme"

- name: Request challenge
  letsencrypt:
    remaining_days: "{{ tls_cert_acme_remaining_days }}"
    acme_directory: "{{ item.acme_dir | default(tls_cert_acme_directory) }}"
    account_email: "{{ tls_cert_acme_account_email }}"
    account_key: "{{ tls_cert_path }}/acme_account_privkey.pem"
    csr: "{{ tls_cert_path }}/{{ item.common_name }}/request.csr"
    dest: "{{ tls_cert_path }}/{{ item.common_name }}/fullchain.pem"
  register: tls_cert_acme_challenge
  with_items: "{{ tls_certificates }}"
  when: item.type == "acme"

- debug:
    msg: >
      "{{ item['challenge_data'][item.item.common_name]['http-01']['resource_value'] }}"
  with_items: "{{ tls_cert_acme_challenge.results }}"
  when: item.item.type == "acme" and item|changed

- name: Create challenge file
  copy:
    dest: "{{ tls_cert_path }}/{{ item.item.common_name }}/acme/{{ item['challenge_data'][item.item.common_name]['http-01']['resource'] }}"
    content: "{{ item['challenge_data'][item.item.common_name]['http-01']['resource_value'] }}"
    mode: 0644
  with_items: "{{ tls_cert_acme_challenge.results }}"
  when: item.item.type == "acme" and item|changed

- name: Push challenge to web server
  local_action: >
    command rsync {{ tls_cert_path }}/{{ item.item.common_name }}/acme/{{ item['challenge_data'][item.item.common_name]['http-01']['resource'] }} {{ item.item.dest_host }}:{{ item.item.dest_acme_challenge_dir }}/.well-known/acme-challenge
  with_items: "{{ tls_cert_acme_challenge.results }}"
  when: item.item.type == "acme" and item|changed

- name: Respond to challenge and fetch certs
  letsencrypt:
    acme_directory: "{{ tls_cert_acme_directory }}"
    account_email: "{{ tls_cert_acme_account_email }}"
    account_key: "{{ tls_cert_path }}/acme_account_privkey.pem"
    csr: "{{ tls_cert_path }}/{{ item.item.common_name }}/request.csr"
    dest: "{{ tls_cert_path }}/{{ item.item.common_name }}/fullchain.pem"
    data: "{{ item }}"
  with_items: "{{ tls_cert_acme_challenge.results }}"
  when: item.item.type == "acme" and item|changed

- name: Cleanup local challenge file
  file:
    path: "{{ tls_cert_path }}/{{ item.item.common_name }}/acme/{{ item['challenge_data'][item.item.common_name]['http-01']['resource'] }}"
    state: absent
  with_items: "{{ tls_cert_acme_challenge.results }}"
  when: item.item.type == "acme" and item|changed

- name: Cleanup remote challenge file
  local_action: >
    command ssh {{ item.item.dest_host }} rm {{ item.item.dest_acme_challenge_dir }}/{{ item['challenge_data'][item.item.common_name]['http-01']['resource'] }}
  with_items: "{{ tls_cert_acme_challenge.results }}"
  when: item.item.type == "acme" and item|changed
